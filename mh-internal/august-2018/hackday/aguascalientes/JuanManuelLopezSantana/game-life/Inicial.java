/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package eljuegodelavida;

import java.util.Random;
import java.lang.Thread;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author gary
 */
public class Inicial extends javax.swing.JFrame {

    /**
     * Creates new form Inicial
     */
    int tabla[][] = new int[10][10];
    int tabla2[][] = new int[10][10];
    
    int filaV[] = new int[100];
    int filaM[] = new int[100];
    int columnaV[] = new int[100];
    int columnaM[] = new int[100];
    int Celulas = 1;
    Random aleatorio = new Random(System.currentTimeMillis());
    public Inicial() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Texto = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();
        Ver = new javax.swing.JLabel();
        Ver2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Generar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        Texto.setColumns(20);
        Texto.setRows(5);
        jScrollPane1.setViewportView(Texto);

        jButton2.setText("Continuar Ciclo");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        Ver.setText("jLabel1");

        Ver2.setText("jLabel1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Ver2, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jButton1)
                        .addGap(28, 28, 28)
                        .addComponent(jButton2)
                        .addGap(18, 18, 18)
                        .addComponent(Ver, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(178, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Ver2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(Ver)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Generar_Celulas();
        Mostrar_Tabla_Celular();
                   
                

            
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
               
        Buscar_Celulas();
        Mostrar_Tabla_Celular();
    }//GEN-LAST:event_jButton2ActionPerformed
    void Generar_Celulas(){
        Limpiar_tabla();
        for(int contador=0;contador<10;contador++){
            tabla[aleatorio.nextInt(10)][aleatorio.nextInt(10)]= 1;
        }
    }
    void Mostrar_Tabla_Celular(){
        Texto.setText("");
        for(int contador=0; contador < 10; contador++)
            {
                for (int contador2 = 0; contador2 < 10; contador2++)
                {
                    Texto.setText(Texto.getText() + tabla[contador][contador2] + " " );
                }
                Texto.setText(Texto.getText() + "\n\n");
            }
    }
    
    void Buscar_Celulas()
        {
            int contadorV = 0;
            int contadorM = 0;
            for(int contador = 0; contador < 10; contador++)
            {
                for(int contador2 = 0; contador2 < 10; contador2++)
                {
                    if(tabla[contador][contador2] == 1 )
                    {
                        filaV[contadorV] = contador;
                        columnaV[contadorV] = contador2;
                        contadorV++;
                        
                    }
                    else
                    {
                        if (tabla[contador][contador2] == 0)
                        {
                            filaM[contadorM] = contador;
                            columnaM[contadorM] = contador2;
                            contadorM++;
                        }
                    }
                }
            }
            Pasar_tabla();           
            Reglas_Celulas_Muertas(contadorM);
            Reglas_Celulas_Vivas(contadorV);
            Pasar_tabla2();
            Celulas = contadorV;
        }
    void Pasar_tabla(){
        for(int c=0; c<10;c++){
            
            for(int c1=0; c1<10;c1++){
            tabla2[c][c1]=tabla[c][c1];
          }
        }
    }
    void Limpiar_tabla(){
        for(int c=0; c<10;c++){
            
            for(int c1=0; c1<10;c1++){
            tabla[c][c1]=0;
          }
        }
    }
    void Pasar_tabla2(){
        for(int c=0; c<10;c++){
            
            for(int c1=0; c1<10;c1++){
            tabla[c][c1]=tabla2[c][c1];
          }
        }
    }
    void Reglas_Celulas_Muertas(int celulasM)
        {
            int F,C,F2,C2;
            for(int contador=0; contador < celulasM; contador++)
            {
                F=-1; 
                F2=1;
                
               int celulasVivas = 0;
               if(filaM[contador] == 0){
                       F=0;
                   }else{
                   if(filaM[contador] == 9){
                       F2=0;
                   }
               }
                for(int contador2=F; contador2 <= F2; contador2++)
                {
                    C=-1;
                    C2=1;
                   if(columnaM[contador] == 0){
                       C=0;
                   }else{
                   if(columnaM[contador] == 9){
                       C2=0;
                    }
                   }
                   for(int contador3=C; contador3 <= C2; contador3++)
                 {
                   if(tabla[filaM[contador]+contador2][columnaM[contador]+contador3] == 1 ){
                       celulasVivas++;
                   }
                 }
                }
                if(celulasVivas == 3)
                {
                    tabla2[filaM[contador]][columnaM[contador]] = 1;
                }
            }
        }
      void Reglas_Celulas_Vivas(int celulasV)
        {
              int F,C,F2,C2;
            for(int contador=0; contador < celulasV; contador++)
            {
                F=-1; 
                F2=1;
                
               int celulasVivas = 0;
               if(filaV[contador] == 0){
                       F=0;
                   }else{
                   if(filaV[contador] == 9){
                       F2=0;
                   }
               }
                for(int contador2=F; contador2 <= F2; contador2++)
                {
                    C=-1;
                    C2=1;
                   if(columnaV[contador] == 0){
                       C=0;
                   }else{
                   if(columnaV[contador] == 9){
                       C2=0;
                    }
                   }
                   for(int contador3=C; contador3 <= C2; contador3++)
                 {
                   if(tabla[filaV[contador]+contador2][columnaV[contador]+contador3] == 1 ){
                       celulasVivas++;
                   }
                 }
                }
                if(celulasVivas-1 == 2 || celulasVivas-1 == 3)
                {
                    tabla2[filaV[contador]][columnaV[contador]] = 1;
                }else{
                
                    tabla2[filaV[contador]][columnaV[contador]] = 0;
                
                    
                }
                
            }
          
        }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Inicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Inicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Inicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Inicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Inicial().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea Texto;
    private javax.swing.JLabel Ver;
    private javax.swing.JLabel Ver2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
